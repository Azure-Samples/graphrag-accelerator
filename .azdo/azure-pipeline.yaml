# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
  - task: Docker@2
    displayName: Build backend docker image
    inputs:
      command: build
      repository: backend
      Dockerfile: $(Build.SourcesDirectory)/docker/Dockerfile-backend
      tags: latest
  - task: Docker@2
    displayName: Build frontend docker image
    inputs:
      command: build
      repository: frontend
      Dockerfile: $(Build.SourcesDirectory)/docker/Dockerfile-frontend
      tags: latest
  # Component Governance does not support pyproject.toml yet.
  # For that reason, use toml-to-requirements to export the
  # dependencies into a requirements.txt file.
  - script: pip install toml-to-requirements
  - script: toml-to-req --toml-file pyproject.toml --poetry --optional-lists dev,test,backend,frontend
  # toml-to-req is not perfect. It will leave wildcard characters in the requirements.txt file which we remove
  - script: sed -i 's/\*//g' requirements.txt
  - task: ComponentGovernanceComponentDetection@0
    inputs:
      scanType: 'Register'
      verbosity: 'Verbose'
      alertWarningLevel: 'High'
