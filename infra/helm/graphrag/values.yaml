# Default values for graphrag.

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations:
    azure.workload.identity/client-id: ""
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

ingress:
  enabled: true
  className: "nginx"
  host: graphrag.graphrag.io
  annotations:
    nginx.ingress.kubernetes.io/send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "3600"
  tls: []

graphragConfig:
  APIM_GATEWAY_URL: ""
  COSMOS_URI_ENDPOINT: ""
  GRAPHRAG_API_BASE: ""
  GRAPHRAG_API_VERSION: ""
  GRAPHRAG_COGNITIVE_SERVICES_ENDPOINT: "https://cognitiveservices.azure.com/.default"
  GRAPHRAG_LLM_MODEL: ""
  GRAPHRAG_LLM_DEPLOYMENT_NAME: ""
  GRAPHRAG_EMBEDDING_MODEL: ""
  GRAPHRAG_EMBEDDING_DEPLOYMENT_NAME: ""
  REPORTERS: "blob,console"
  STORAGE_ACCOUNT_BLOB_URL: ""
  AI_SEARCH_URL: ""

query:
  name: "query"
  replicaCount: 1
  image:
    repository: graphrag.azurecr.io/graphrag
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 8
      memory: "16Gi"
    requests:
      cpu: 4
      memory: "10Gi"

  livenessProbe:
    httpGet:
      path: /manpage/docs
      port: http
    failureThreshold: 50
    initialDelaySeconds: 30
    periodSeconds: 20

  readinessProbe:
    httpGet:
      path: /manpage/docs
      port: http
    failureThreshold: 50
    initialDelaySeconds: 30
    periodSeconds: 20

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 20
    targetMemoryUtilizationPercentage: 50
    # targetCPUUtilizationPercentage: 50

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: workload
            operator: In
            values:
            - graphrag

index:
  name: "index"
  replicaCount: 1
  image:
    repository: graphrag.azurecr.io/graphrag
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 8
      memory: "16Gi"
    requests:
      cpu: 4
      memory: "10Gi"

  livenessProbe:
    httpGet:
      path: /manpage/docs
      port: http
    failureThreshold: 50
    initialDelaySeconds: 30
    periodSeconds: 20

  readinessProbe:
    httpGet:
      path: /manpage/docs
      port: http
    failureThreshold: 50
    initialDelaySeconds: 30
    periodSeconds: 20

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 20
    targetMemoryUtilizationPercentage: 50
    # targetCPUUtilizationPercentage: 50

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: workload
            operator: In
            values:
            - graphrag

ingress-nginx:
  controller:
    service:
      annotations:
        service.beta.kubernetes.io/azure-load-balancer-internal: "true"
        service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /healthz
