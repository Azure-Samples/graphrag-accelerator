# Tip: Setup Azure Service Principal for Github Actions: https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux
# Tip: Give the service principal subscription scope instead of resource scope: az ad sp create-for-rbac -n "MyApp" --role Contributor --scopes /subscriptions/{subscriptionId}
name: Prod Deployment
on:
  workflow_dispatch: # triggered manually via the GitHub UI
env:
  resource-group: graphrag-cicd-prod
  image-tag: 2.2.0
jobs:
  deploy-infrastructure:
    runs-on: [ self-hosted, 1ES.Pool=smt-runners ]
    permissions:
      id-token: write
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Install required tools
      run: |
        # install kubectl
        curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        # install helm
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh
        # confirm installation of required tools
        which sed
        which az
        which jq
        which yq
        which kubectl
        which helm
        az version
        jq --version
        kubectl version --client=true
        helm version
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: 2.1.0
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
    - name: Configure deployment
      working-directory: infra
      run: |
        sed -i'' 's|__CONTAINER_REGISTRY_SERVER__|${{ vars.CONTAINER_REGISTRY_SERVER }}|g' deploy.parameters.json
        sed -i'' 's|__GRAPHRAG_API_BASE__|${{ vars.PROD_GRAPHRAG_API_BASE }} |g' deploy.parameters.json
        sed -i'' 's|__GRAPHRAG_API_VERSION__|2023-03-15-preview|g' deploy.parameters.json
        sed -i'' 's|__GRAPHRAG_EMBEDDING_DEPLOYMENT_NAME__|graphrag-text-embedding-ada-002|g' deploy.parameters.json
        sed -i'' 's|__GRAPHRAG_EMBEDDING_MODEL__|text-embedding-ada-002|g' deploy.parameters.json
        sed -i'' 's|__GRAPHRAG_IMAGE__|graphrag:${{ env.image-tag }}|g' deploy.parameters.json
        sed -i'' 's|__GRAPHRAG_LLM_DEPLOYMENT_NAME__|graphrag-gpt-4|g' deploy.parameters.json
        sed -i'' 's|__GRAPHRAG_LLM_MODEL__|gpt-4|g' deploy.parameters.json
        sed -i'' 's|__LOCATION__|eastus2|g' deploy.parameters.json
        sed -i'' 's|__RESOURCE_GROUP__|${{ env.resource-group }}|g' deploy.parameters.json
        cat deploy.parameters.json
    - name: Deploy resources to RG
      working-directory: infra
      run: |
        bash deploy.sh deploy.parameters.json
